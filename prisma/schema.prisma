// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CartStatus {
  PAID
  UNPAID
}

model Customer {
  id String @id @default(uuid())

  username String @unique @db.VarChar(255)
  email String @unique @db.VarChar(255)
  password String 

  cart Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}

model Product {
  id String @id @default(uuid())

  slug String @db.VarChar(255) @unique
  name String @db.VarChar(255) @unique
  price Int @default(0)
  description String?
  stock Int @default(0)
  sold Int @default(0)

  images ProductImage[]
  carts CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model ProductImage {

  id String @id @default(uuid())

  product Product @relation(fields: [productId], references: [id])
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id String @id @default(uuid())
  quantity Int @default(1)
  totalPrice Int @map("total_price")

  cartStatus CartStatus @default(UNPAID)

  customer Customer @relation(fields: [customerId], references: [id])
  customerId String @map("user_id")

  products CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt

  @@map("carts")
}

model CartItem {

  quantity Int @default(1)
  price Int
  subTotalPrice Int @map("sub_total_price")

  product Product @relation(fields: [productId], references: [id])
  productId String @map("product_Id")

  cart Cart @relation(fields: [cartId], references: [id])
  cartId String @map("cart_id")

  @@id([productId, cartId])

}